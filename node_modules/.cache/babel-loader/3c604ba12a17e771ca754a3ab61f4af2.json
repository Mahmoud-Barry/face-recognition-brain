{"ast":null,"code":"var _jsxFileName = \"/home/docteurjs/Bureau/udemy/face-recognition-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-tsparticles';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Logo from \"./components/Logo/Logo\";\nimport Navigation from './components/navigation/Navigation';\nimport Signin from './components/Signin/SignIn';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c8b3bcdebc3b43928e57bba9fe28b2f5'\n});\nconst particlesOptions = {\n  fpsLimit: 60,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      resize: true\n    },\n    modes: {\n      bubble: {\n        distance: 400,\n        duration: 2,\n        opacity: 0.8,\n        size: 40\n      },\n      push: {\n        quantity: 4\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    collisions: {\n      enable: true\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 6,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800\n      },\n      value: 80\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      random: true,\n      value: 5\n    }\n  },\n  detectRetina: true\n};\n\nconst particlesInit = main => {\n  console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n};\n\nconst particlesLoaded = container => {\n  console.log(container);\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response)).catch(err => console.log(err)));\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.onSignOut = () => {\n      this.setState({\n        route: 'signin'\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: \"signin\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        id: \"tsparticles\",\n        init: particlesInit,\n        loaded: particlesLoaded,\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onSignOut: this.onSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), this.state.route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/docteurjs/Bureau/udemy/face-recognition-brain/src/App.js"],"names":["React","Component","Clarifai","Particles","ImageLinkForm","Logo","Navigation","Signin","Rank","FaceRecognition","app","App","apiKey","particlesOptions","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","type","detectRetina","particlesInit","main","console","log","particlesLoaded","container","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","onSignOut","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-tsparticles';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Logo from \"./components/Logo/Logo\";\nimport Navigation from './components/navigation/Navigation';\nimport Signin from './components/Signin/SignIn';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst app = new Clarifai.App({\n apiKey: 'c8b3bcdebc3b43928e57bba9fe28b2f5'\n});\n\nconst particlesOptions = {\n    fpsLimit: 60,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\",\n        },\n        onHover: {\n          enable: true,\n          mode: \"repulse\",\n        },\n        resize: true,\n      },\n      modes: {\n        bubble: {\n          distance: 400,\n          duration: 2,\n          opacity: 0.8,\n          size: 40,\n        },\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4,\n        },\n      },\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      collisions: {\n        enable: true,\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outMode: \"bounce\",\n        random: false,\n        speed: 6,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800,\n        },\n        value: 80,\n      },\n      opacity: {\n        value: 0.5,\n      },\n      shape: {\n        type: \"circle\",\n      },\n      size: {\n        random: true,\n        value: 5,\n      },\n    },\n    detectRetina: true,\n}\n\nconst particlesInit = (main) => {\n  console.log(main);\n\n  // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n};\n\nconst particlesLoaded = (container) => {\n  console.log(container);\n};\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: \"signin\",\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n }\n \n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event)=>{\n    this.setState({\n      input: event.target.value\n    })\n\n  }\n\n  onButtonSubmit = ()=>{\n    this.setState({\n      imageUrl:this.state.input\n    })\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response))\n      .catch(err => console.log(err))\n      );\n  }\n\n  onRouteChange = ()=>{\n    this.setState({ route: 'home'});\n  }\n\n  onSignOut = ()=>{\n    this.setState({ route: 'signin'});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n          <Particles className='particles'\n            id=\"tsparticles\"\n            init={particlesInit}\n            loaded={particlesLoaded}\n            options={particlesOptions}\n          />\n          <Navigation onSignOut={this.onSignOut}/>\n          {\n            this.state.route === \"signin\"\n              ?<Signin onRouteChange={this.onRouteChange}/>\n              :<div>\n                  <Logo />\n                  <Rank />\n                  <ImageLinkForm onInputChange={ this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n                  <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n              </div> \n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}